/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;
//

import clases.Tratamiento;
import clases.alergias;
import clases.claseFichaMedica;
import clases.enfermedades;
import clases.paciente;
import clases.persona;
import clases.validaciones;
import conexion_bada.Conexion;
import conexion_bada.Insert;
import conexion_bada.Insert_alergias;
import conexion_bada.Insert_historial;
import conexion_bada.Insert_tratamiento;
import conexion_bada.insert_ficha_alergia;
import conexion_bada.insert_ficha_enfermedad;
import conexion_bada.insert_ficha_medica;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class HistorialMedico extends javax.swing.JFrame {

    Insert inser = new Insert();
    Insert_alergias mi_alergia = new Insert_alergias();
    insert_ficha_enfermedad mi_enfermedad = new insert_ficha_enfermedad();
    Insert_tratamiento mi_trata = new Insert_tratamiento();
    Insert_historial mi_historial = new Insert_historial();
    insert_ficha_medica mi_fic = new insert_ficha_medica();

    insert_ficha_alergia inserfichaalergia = new insert_ficha_alergia();
    insert_ficha_enfermedad inserfichaenfermedad = new insert_ficha_enfermedad();

    Conexion mi_cone = new Conexion();
    DefaultListModel modeloListAlergia;
    DefaultListModel modeloListEnfermedad;

    public HistorialMedico() {
        initComponents();
        this.setLocationRelativeTo(null);
        BloquearCampos();
        cargarcod();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gruposexoh = new javax.swing.ButtonGroup();
        cargarPaciente = new javax.swing.JDialog();
        jScrollPane5 = new javax.swing.JScrollPane();
        TablaPaciente = new javax.swing.JTable();
        BtBuscarPaciente = new javax.swing.JButton();
        text_buscar = new javax.swing.JTextField();
        cargarP = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtnombres = new javax.swing.JTextField();
        txtapellidos = new javax.swing.JTextField();
        actualizacion = new com.toedter.calendar.JDateChooser();
        datenacimiento = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        txtceduhistoria = new javax.swing.JTextField();
        hmasculino = new javax.swing.JRadioButton();
        hfemenino = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        txthdireccion = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane4 = new javax.swing.JScrollPane();
        text_observaciones = new javax.swing.JTextArea();
        txthtelefono = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        buscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_tratamiento = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        text_codigo_historial = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        text_codigo_paciente = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        JListEnfermedades = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        JListAlergias = new javax.swing.JList<>();

        cargarPaciente.setResizable(false);

        TablaPaciente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CODIGO", "CEDULA", "NOMBRES", "APELLIDOS"
            }
        ));
        TablaPaciente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TablaPacienteMousePressed(evt);
            }
        });
        jScrollPane5.setViewportView(TablaPaciente);

        BtBuscarPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar (2).png"))); // NOI18N
        BtBuscarPaciente.setToolTipText("BUSCAR PACIENTE");
        BtBuscarPaciente.setBorder(null);
        BtBuscarPaciente.setOpaque(false);
        BtBuscarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtBuscarPacienteActionPerformed(evt);
            }
        });

        text_buscar.setText("Buscar...");
        text_buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                text_buscarMousePressed(evt);
            }
        });
        text_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_buscarActionPerformed(evt);
            }
        });

        cargarP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/carga-de-archivos.png"))); // NOI18N
        cargarP.setToolTipText("CARGAR CODIGO");
        cargarP.setBorder(null);
        cargarP.setOpaque(false);
        cargarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cargarPacienteLayout = new javax.swing.GroupLayout(cargarPaciente.getContentPane());
        cargarPaciente.getContentPane().setLayout(cargarPacienteLayout);
        cargarPacienteLayout.setHorizontalGroup(
            cargarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cargarPacienteLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(text_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtBuscarPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cargarP, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
            .addGroup(cargarPacienteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cargarPacienteLayout.setVerticalGroup(
            cargarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cargarPacienteLayout.createSequentialGroup()
                .addGroup(cargarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(cargarPacienteLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(text_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cargarPacienteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BtBuscarPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cargarPacienteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cargarP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("HISTORIAL MEDICO");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Nombres:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Apellidos:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Fecha Nacimiento:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Fecha de Actualizacion:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Observaciones");
        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Direccion:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Sexo:");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Tratamiento");
        jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Telefono:");

        txtnombres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnombresActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setText("Cedula:");

        txtceduhistoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtceduhistoriaActionPerformed(evt);
            }
        });

        gruposexoh.add(hmasculino);
        hmasculino.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        hmasculino.setText("M");
        hmasculino.setOpaque(false);

        gruposexoh.add(hfemenino);
        hfemenino.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        hfemenino.setText("F");
        hfemenino.setOpaque(false);

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setText("Enfermedades:");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setText("Alergias:");

        text_observaciones.setColumns(20);
        text_observaciones.setRows(5);
        jScrollPane4.setViewportView(text_observaciones);

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/atras.png"))); // NOI18N
        jButton1.setToolTipText("REGRESAR");
        jButton1.setBorder(null);
        jButton1.setOpaque(false);

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/salvar (1).png"))); // NOI18N
        jButton2.setToolTipText("GUARDAR");
        jButton2.setBorder(null);
        jButton2.setOpaque(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar (2).png"))); // NOI18N
        buscar.setToolTipText("buscar");
        buscar.setBorder(null);
        buscar.setOpaque(false);
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        tabla_tratamiento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo Tratamiento", "Diagnostico", "Medicamento", "Dosis", "Fecha de Inicio", "Fecha de Finalizacion", "Codigo paciente"
            }
        ));
        jScrollPane1.setViewportView(tabla_tratamiento);

        jLabel17.setText("Codigo Historial");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel18.setText("Codigo paciente");

        text_codigo_paciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_codigo_pacienteActionPerformed(evt);
            }
        });

        JListEnfermedades.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JListEnfermedadesKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(JListEnfermedades);

        jScrollPane2.setViewportView(JListAlergias);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(363, 363, 363)
                        .addComponent(buscar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel1)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtnombres, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                                .addComponent(jLabel4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txthtelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtceduhistoria, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(hmasculino)
                                .addGap(18, 18, 18)
                                .addComponent(hfemenino)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txthdireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(datenacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtapellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(250, 250, 250)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(actualizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel14))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(text_codigo_paciente, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addGap(18, 18, 18)
                .addComponent(text_codigo_historial, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(249, 249, 249))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 1283, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 982, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1060, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(479, 479, 479)
                        .addComponent(jButton2)
                        .addGap(143, 143, 143)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(346, 346, 346)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(buscar)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtceduhistoria, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel13))))
                            .addComponent(jLabel7)
                            .addComponent(actualizacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtnombres, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(txtapellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(text_codigo_paciente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txthtelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel12)
                                        .addComponent(jLabel9)
                                        .addComponent(txthdireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel10)
                                        .addComponent(hmasculino)
                                        .addComponent(hfemenino)
                                        .addComponent(jLabel6))
                                    .addComponent(datenacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(text_codigo_historial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(183, 183, 183))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1081, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 712, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtnombresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnombresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnombresActionPerformed

    private void txtceduhistoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtceduhistoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtceduhistoriaActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (validaciones()) {
            guardar_historial();
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    public boolean validaciones() {
        boolean validado = true;
        validaciones misvalidaciones = new validaciones();

        if (txtceduhistoria.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Seleccione un paciente");
        }

        if (txtnombres.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese El primer nombre del paciente");
        }

        if (txtapellidos.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese el primer apellido del paciente");
        }

        if (txthdireccion.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese la direccion del paciente");
        }
//        if (text_area_alergias.getText().isEmpty()) {
//            validado = false;
//            JOptionPane.showMessageDialog(this, "Ingrese las alergias");
//        }
//        if (text_area_enfermedad.getText().isEmpty()) {
//            validado = false;
//            JOptionPane.showMessageDialog(this, "Ingrese las enfermedades");
//        }
        if (text_observaciones.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese las observaciones");
        }

        if (datenacimiento.getDate() == null) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese la fecha de nacimiento");
        }

        return validado;
    }

    public void cargarcod() {
        text_codigo_historial.setEnabled(false);
        text_codigo_historial.setText(String.valueOf(mi_historial.cargarcodigo()));
    }

    public void guardar_historial() {
        List<Tratamiento> com = mi_trata.lista_tratamiento();
        List<claseFichaMedica> ficha = mi_fic.ListaFichaMedica();

        mi_historial.setCodigo_historial(text_codigo_historial.getText());
        mi_historial.setCodigo_paciente(text_codigo_paciente.getText());
        com.stream().forEach(p -> {
            String codigo_tratameinto = p.getCodigo_tratamiento();
            mi_historial.setCodigo_tratamiento(codigo_tratameinto);
        });

        ficha.stream().forEach(g -> {
            int codigo_ficha = g.getCodigo_ficha_medica();
            mi_historial.setCodigo_ficha(Integer.toString(codigo_ficha));
        });

        mi_historial.setObservaciones_historial(text_observaciones.getText());
        Limpiar();
        if (mi_historial.Insertar_historial()) {
            System.out.println("Conexion Exitosa");

        } else {
            System.out.println("Conexion Erronea");
        }

    }

    public void Limpiar() {
        txtceduhistoria.setText("");
        text_codigo_paciente.setText("");
        txtnombres.setText("");
        txthtelefono.setText("");
        txtapellidos.setText("");
        txthdireccion.setText("");
//        text_area_alergias.setText("");
//        text_area_enfermedad.setText("");
        DefaultListModel modelo = new DefaultListModel();
        JListAlergias.setModel(modelo);
        JListEnfermedades.setModel(modelo);

        gruposexoh.clearSelection();
        datenacimiento.setCalendar(null);
        tabla_tratamiento.setModel(new DefaultTableModel());
        text_observaciones.setText("");
    }
    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        cargarPaciente.setSize(494, 258);
        cargarTablaP();
        cargarPaciente.setVisible(true);
        cargarPaciente.setLocationRelativeTo(buscar);

    }//GEN-LAST:event_buscarActionPerformed

    private void TablaPacienteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaPacienteMousePressed

    }//GEN-LAST:event_TablaPacienteMousePressed

    private void BtBuscarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtBuscarPacienteActionPerformed

        if (!text_buscar.getText().isEmpty()) {
            buscar_paciente();
        } else {
            JOptionPane.showMessageDialog(this, "Ingrese la cedula del paciente");
        }
    }//GEN-LAST:event_BtBuscarPacienteActionPerformed
    public void buscar_paciente() {
        String cedula = text_buscar.getText();
        var pacientefiltro = new ArrayList<paciente>();
        inser.ListaPaciente().forEach((e) -> {
            if (e.getCedula().equals(cedula)) {
                pacientefiltro.add(e);
            }
        });
        if (pacientefiltro.size() != 0) {

            String matriz[][] = new String[pacientefiltro.size()][4];
            for (int j = 0; j < pacientefiltro.size(); j++) {
                matriz[j][0] = String.valueOf(pacientefiltro.get(j).getCodigo());
                matriz[j][1] = pacientefiltro.get(j).getCedula();
                matriz[j][2] = pacientefiltro.get(j).getPri_nomb() + "  " + pacientefiltro.get(j).getSeg_nombre();
                matriz[j][3] = pacientefiltro.get(j).getPrim_apell() + "  " + pacientefiltro.get(j).getSeg_apelli();;

            }
            TablaPaciente.setModel(new javax.swing.table.DefaultTableModel(
                    matriz,
                    new String[]{
                        "CODIGO", "CEDULA", "NOMBRES", "APELLIDOS"
                    }
            ));
        } else {
            JOptionPane.showMessageDialog(this, "El paciente no existe en la base de datos");
        }
    }
    private void text_buscarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_text_buscarMousePressed

//        text_buscar.setText("");
//        text_buscar.setForeground(Color.BLACK);
    }//GEN-LAST:event_text_buscarMousePressed

    private void text_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_buscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_buscarActionPerformed

    private void cargarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarPActionPerformed
        cargar_codigo_paci();
    }//GEN-LAST:event_cargarPActionPerformed

    private void JListEnfermedadesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JListEnfermedadesKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_JListEnfermedadesKeyPressed

    private void text_codigo_pacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_codigo_pacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_codigo_pacienteActionPerformed
    public void cargarTablaP() {
        DefaultTableModel tb = (DefaultTableModel) TablaPaciente.getModel();
        tb.setNumRows(0);
        List<paciente> com = inser.ListaPaciente();
        com.stream().forEach(p -> {
            String[] cami = {String.valueOf(p.getCodigo()), p.getPri_nomb() + "  " + p.getSeg_nombre(), p.getCedula(), p.getPrim_apell() + "  " + p.getSeg_apelli()};
            tb.addRow(cami);
        });
    }

    public void cargar_codigo_paci() {
        int seleccion = TablaPaciente.getSelectedRow();

        if (seleccion == -1) {
            JOptionPane.showMessageDialog(null, "Aun no ha seleccionado una fila");
        } else {
            int codigo = Integer.parseInt(TablaPaciente.getValueAt(seleccion, 0).toString());
            inser.ListaPaciente().forEach((p) -> {
                if (p.getCodigo() == codigo) {
                    text_codigo_paciente.setText(String.valueOf(p.getCodigo()));
                    txtceduhistoria.setText(p.getCedula());
                    txtnombres.setText(p.getPri_nomb()+"  "+p.getSeg_nombre());
                    txtapellidos.setText(p.getPrim_apell()+"  "+p.getSeg_apelli());

                    txthdireccion.setText(p.getDireccion());
                    txthtelefono.setText(p.getTelefono());
                    if (p.getGenero().equalsIgnoreCase("hombre")) {
                        hmasculino.setSelected(true);
                    }
                    if (p.getGenero().equalsIgnoreCase("mujer")) {
                        hfemenino.setSelected(true);
                    }
                    SimpleDateFormat formatofecha = new SimpleDateFormat("yyyy-MM-dd");
                    Date fecha = null;
                    try {
                        fecha = formatofecha.parse(p.getFecha_Nacimiento());
                    } catch (ParseException ex) {
                        Logger.getLogger(Agregar_administrador.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    datenacimiento.setDate(fecha);
                    modeloListEnfermedad = new DefaultListModel();
                    List<alergias> ale = mi_alergia.ListaAlergias();
//                    ale.stream().forEach(alergia -> {
//                        text_area_alergias.setText(alergia.getNombre_alergia());
//                    });
//                    List<enfermedades> enfer = mi_enfermedad.ListaEnfermedades(ICONIFIED);
//                    enfer.stream().forEach(enfermedad -> {
//                        text_area_enfermedad.setText(enfermedad.getNombre_enfermedad());
//                    });
                    modeloListEnfermedad = new DefaultListModel();
                    List<enfermedades> enfer = inserfichaenfermedad.ListaEnfermedades(mi_historial.obtenerCodFicha(p.getCodigo()));
                    enfer.stream().forEach(enfe -> {

                        JListEnfermedades.setModel(modeloListEnfermedad);
                        modeloListEnfermedad.addElement(enfe.getNombre_enfermedad());
                    });
                    modeloListAlergia = new DefaultListModel();
                    List<alergias> aler = inserfichaalergia.Listaalergias(mi_historial.obtenerCodFicha(p.getCodigo()));
                    aler.stream().forEach(alergia -> {
                        JListAlergias.setModel(modeloListAlergia);
                        modeloListAlergia.addElement(alergia.getNombre_alergia());
                    });
                    cargar_tabla_tratamiento();

                    cargarPaciente.dispose();
                }
            });

            String cod;
            cod = TablaPaciente.getValueAt(seleccion, 0).toString();
            text_codigo_paciente.setText(cod);
//            System.out.println(cod);
            cargarPaciente.dispose();
        }
    }

    public void cargar_tabla_tratamiento() {

        DefaultTableModel tb = (DefaultTableModel) tabla_tratamiento.getModel();
        tb.setNumRows(0);
        List<Tratamiento> com = mi_trata.lista_tratamiento();
        com.stream().forEach(p -> {
            String[] trata = {p.getCodigo_tratamiento(), p.getDiagnostico(), p.getCodigo_medicamento(), p.getDosis(), p.getFecha_inicio_trata(), p.getFecha_fin_trata(), p.getCodigo_paciente(), p.getObservaciones()};
            tb.addRow(trata);
        });

    }

    public void BloquearCampos() {
        txtceduhistoria.setEditable(false);
        txthdireccion.setEditable(false);
        txthtelefono.setEditable(false);
        txtapellidos.setEditable(false);
        txtnombres.setEditable(false);
        datenacimiento.setEnabled(false);

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HistorialMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HistorialMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HistorialMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HistorialMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HistorialMedico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtBuscarPaciente;
    private javax.swing.JList<String> JListAlergias;
    private javax.swing.JList<String> JListEnfermedades;
    private javax.swing.JTable TablaPaciente;
    private com.toedter.calendar.JDateChooser actualizacion;
    private javax.swing.JButton buscar;
    private javax.swing.JButton cargarP;
    private javax.swing.JDialog cargarPaciente;
    private com.toedter.calendar.JDateChooser datenacimiento;
    private javax.swing.ButtonGroup gruposexoh;
    private javax.swing.JRadioButton hfemenino;
    private javax.swing.JRadioButton hmasculino;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable tabla_tratamiento;
    private javax.swing.JTextField text_buscar;
    private javax.swing.JTextField text_codigo_historial;
    private javax.swing.JTextField text_codigo_paciente;
    private javax.swing.JTextArea text_observaciones;
    private javax.swing.JTextField txtapellidos;
    private javax.swing.JTextField txtceduhistoria;
    private javax.swing.JTextField txthdireccion;
    private javax.swing.JTextField txthtelefono;
    private javax.swing.JTextField txtnombres;
    // End of variables declaration//GEN-END:variables
}
